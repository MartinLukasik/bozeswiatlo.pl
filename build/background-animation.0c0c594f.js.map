{"version":3,"sources":["js/modules/background-animation.js"],"names":["canvas","document","getElementById","ctx","getContext","width","window","innerWidth","height","innerHeight","img","Image","imgInfo","imgs","grids","magnet","mouse","x","y","init","addListeners","onload","e","path","target","numberToShow","Math","ceil","createGrid","matchMedia","matches","populateCanvas","classList","add","render","src","imgSrc","addEventListener","resizeCanvas","updateMouse","clientX","clientY","nb","i","result","p","Photo","push","imgScale","grid","row","cols","rowWidth","colHeight","r","end","asc","c","end1","asc1","item","gridItem","__range__","length","map","draw","w","h","drawImage","seed","random","finalX","finalY","forceX","forceY","TO_RADIANS","PI","update","x0","y0","dx","dy","distance","sqrt","rotateAndPaintImage","context","image","angle","positionX","positionY","axisX","axisY","widthX","widthY","translate","rotate","clearRect","requestAnimationFrame","left","right","inclusive","range","ascending"],"mappings":";;;AAiMC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,KAAA,EAjMD,IAAA,EAAA,EAAA,QAAA,6BAiMC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA/LD,IAAMA,EAASC,SAASC,eAAe,UACjCC,EAAMH,EAAOI,WAAW,MAC1BC,EAASL,EAAOK,MAAQC,OAAOC,WAC/BC,EAAUR,EAAOQ,OAA8B,IAArBF,OAAOG,YAC/BC,EAAM,IAAIC,MACVC,EAAU,GACVC,EAAO,GACPC,EAAQ,GACRC,EAAS,KACTC,EAAQ,CACZC,EAAG,EACHC,EAAG,GAGE,SAASC,IAsBNT,OArBRU,IAEAV,EAAIW,OAAS,SAAUC,GAErBV,EAAQP,MAAQiB,EAAEC,KAAOD,EAAEC,KAAK,GAAGlB,MAAQiB,EAAEE,OAAOnB,MACpDO,EAAQJ,OAASc,EAAEC,KAAOD,EAAEC,KAAK,GAAGf,OAASc,EAAEE,OAAOhB,OAEhDiB,IAAAA,EACJC,KAAKC,KAAKrB,OAAOC,WAAaK,EAAQP,OACtCqB,KAAKC,KAAKrB,OAAOG,YAAcG,EAAQJ,QAEzCoB,IACItB,OAAOuB,WAAW,sBAAsBC,SAC1CC,EAA8B,GAAfN,GAIjBzB,EAAOgC,UAAUC,IAAI,SACrBC,KAGMxB,EAAIyB,IAAMC,EAAlB,QAGF,SAAShB,IACPd,OAAO+B,iBAAiB,SAAUC,GAClChC,OAAO+B,iBAAiB,YAAaE,GAGvC,SAASA,EAAYjB,GACnBN,EAAMC,EAAIK,EAAEkB,QACZxB,EAAME,EAAII,EAAEmB,QAGd,SAASH,IACPjC,EAAQL,EAAOK,MAAQC,OAAOC,WAC9BC,EAASR,EAAOQ,OAASF,OAAOG,YAIlC,SAASsB,EAAeW,GAClBC,IAAAA,EAAI,EACA,OAAA,WAECA,IADDC,IAAAA,EAAS,GACRD,GAAKD,GAAI,CACRG,IAAAA,EAAI,IAAIC,EACdjC,EAAKkC,KAAKF,GACVD,EAAOG,KAAKJ,KAEPC,OAAAA,EAPD,GAWV,SAAShB,IAUL,IATIoB,IACAC,EAAO,CACXC,IAAKxB,KAAKC,KAAKrB,OAAOC,YAFP,GAEqBK,EAAQP,QAC5C8C,KAAMzB,KAAKC,KAAKrB,OAAOG,aAHR,GAGuBG,EAAQJ,SAC9C4C,SAJe,GAILxC,EAAQP,MAClBgD,UALe,GAKJzC,EAAQJ,QAIf8C,EAAI,EAAGC,EAAMN,EAAKC,IAAKM,EAAM,GAAKD,EACtCC,EAAMF,EAAIC,EAAMD,EAAIC,EACpBC,EAAMF,IAAMA,IAIV,IAFIrC,IAAAA,EAAIqC,EAAIL,EAAKG,SAEbK,EAAI,EAAGC,EAAOT,EAAKE,KAAMQ,EAAO,GAAKD,EACzCC,EAAOF,EAAIC,EAAOD,EAAIC,EACtBC,EAAOF,IAAMA,IACb,CACMvC,IAEA0C,EAAO,IAAIC,EAAS5C,EAFhBwC,EAAIR,EAAKI,UAEaJ,EAAKG,SAAUH,EAAKI,WACpDvC,EAAMiC,KAAKa,GAIRE,OAAAA,EAAU,EAAGhD,EAAMiD,QAAQ,GAAOC,IAAI,SAACrB,GAAM7B,OAAAA,EAAM6B,GAAGsB,SAG/D,SAASJ,EAAS5C,EAAGC,EAAGgD,EAAGC,GAChB,MAALlD,IACFA,EAAI,GAEG,MAALC,IACFA,EAAI,GAED+C,KAAAA,KAAO,WACV9D,EAAIiE,UAAU1D,EAAKO,EAAGC,EAAGgD,EAAGC,IAIhC,SAASrB,IACDuB,IAAAA,EAAuB,IAAhB3C,KAAK4C,SAAiB,EAC7BJ,EAAItD,EAAQP,MAAQgE,EACpBF,EAAIvD,EAAQJ,OAAS6D,EACvBpD,EAAIX,OAAOC,WAAamB,KAAK4C,SAC3BC,EAAStD,EACXC,EAAIZ,OAAOG,YAAciB,KAAK4C,SAC5BE,EAAStD,EACToC,EAAqB,IAAjB5B,KAAK4C,SAA2B,IAEtCG,EAAS,EACTC,EAAS,EAEPC,EAAajD,KAAKkD,GAAK,IAExBC,KAAAA,OAAS,WACNC,IAAAA,EAAK7D,EACL8D,EAAK7D,EAIL8D,EAHKhE,EAAMC,EAGD6D,EACVG,EAHKjE,EAAME,EAGD6D,EAEVG,EAAWxD,KAAKyD,KAAKH,EAAKA,EAAKC,EAAKA,GAO1ChE,EANe6D,EAAOE,EAAKE,EAAYnE,EAAUmE,GAGjDT,GAAUA,GAAUF,EAASO,GAAM,GAAK,KAIxC5D,EANe6D,EAAOE,EAAKC,EAAYnE,EAAUmE,GAGjDR,GAAUA,GAAUF,EAASO,GAAM,GAAK,MAKrCd,KAAAA,KAAO,WACVmB,OAAAA,EAAoBjF,EAAKO,EAAK4C,EAAIqB,EAAY1D,EAAGC,EAAGgD,EAAI,EAAGC,EAAI,EAAGD,EAAGC,IAGzE,SAASiB,EACPC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAMOR,OAJPA,EAAQS,UAAUN,EAAWC,GAC7BJ,EAAQU,OAAOR,GACfF,EAAQjB,UAAUkB,GAAQI,GAAQC,EAAOC,EAAQC,GACjDR,EAAQU,QAAQR,GACTF,EAAQS,WAAWN,GAAYC,GAGxC,SAASvD,IACHjB,IAAAA,EAAI,EACJC,EAAI,EAEDA,IADPf,EAAI6F,UAAU,EAAG,EAAG3F,EAAOG,GACpBU,EAAIJ,EAAMiD,QACfjD,EAAMI,GAAG+C,OACT/C,IAEKD,KAAAA,EAAIJ,EAAKkD,QACdlD,EAAKI,GAAG4D,SACRhE,EAAKI,GAAGgD,OACRhD,IAGKgF,OAAAA,sBAAsB/D,GAG/B,SAAS4B,EAAUoC,EAAMC,EAAOC,GAIzB,IAHDC,IAAAA,EAAQ,GACRC,EAAYJ,EAAOC,EACnB5C,EAAO6C,EAAoBE,EAAYH,EAAQ,EAAIA,EAAQ,EAAxCA,EACdxD,EAAIuD,EAAMI,EAAY3D,EAAIY,EAAMZ,EAAIY,EAAK+C,EAAY3D,IAAMA,IAClE0D,EAAMtD,KAAKJ,GAEN0D,OAAAA","file":"background-animation.0c0c594f.js","sourceRoot":"..","sourcesContent":["import imgSrc from '../../img/canvas-bg.webp';\n\nconst canvas = document.getElementById('canvas');\nconst ctx = canvas.getContext('2d');\nlet width = (canvas.width = window.innerWidth);\nlet height = (canvas.height = window.innerHeight * 0.55);\nconst img = new Image();\nconst imgInfo = {};\nconst imgs = [];\nconst grids = [];\nconst magnet = 2050;\nconst mouse = {\n  x: 1,\n  y: 0,\n};\n\nexport function init() {\n  addListeners();\n\n  img.onload = function (e) {\n    // Check for firefox.\n    imgInfo.width = e.path ? e.path[0].width : e.target.width;\n    imgInfo.height = e.path ? e.path[0].height : e.target.height;\n\n    const numberToShow =\n      Math.ceil(window.innerWidth / imgInfo.width) *\n      Math.ceil(window.innerHeight / imgInfo.height);\n\n    createGrid();\n    if (window.matchMedia('(min-width: 500px)').matches) {\n      populateCanvas(numberToShow * 15);\n    }\n\n    // Image is ready and we're ready to go\n    canvas.classList.add('ready');\n    render();\n  };\n\n  return (img.src = imgSrc);\n}\n\nfunction addListeners() {\n  window.addEventListener('resize', resizeCanvas);\n  window.addEventListener('mousemove', updateMouse);\n}\n\nfunction updateMouse(e) {\n  mouse.x = e.clientX;\n  mouse.y = e.clientY;\n}\n\nfunction resizeCanvas() {\n  width = canvas.width = window.innerWidth;\n  height = canvas.height = window.innerHeight;\n}\n\n// Magic\nfunction populateCanvas(nb) {\n  let i = 0;\n  return (() => {\n    const result = [];\n    while (i <= nb) {\n      const p = new Photo();\n      imgs.push(p);\n      result.push(i++);\n    }\n    return result;\n  })();\n}\n\nfunction createGrid() {\n  const imgScale = 0.4;\n  const grid = {\n    row: Math.ceil(window.innerWidth / (imgInfo.width * imgScale)),\n    cols: Math.ceil(window.innerHeight / (imgInfo.height * imgScale)),\n    rowWidth: imgInfo.width * imgScale,\n    colHeight: imgInfo.height * imgScale,\n  };\n\n  for (\n    let r = 0, end = grid.row, asc = 0 <= end;\n    asc ? r < end : r > end;\n    asc ? r++ : r--\n  ) {\n    const x = r * grid.rowWidth;\n    for (\n      let c = 0, end1 = grid.cols, asc1 = 0 <= end1;\n      asc1 ? c < end1 : c > end1;\n      asc1 ? c++ : c--\n    ) {\n      const y = c * grid.colHeight;\n\n      const item = new gridItem(x, y, grid.rowWidth, grid.colHeight);\n      grids.push(item);\n    }\n  }\n\n  return __range__(0, grids.length, false).map((i) => grids[i].draw());\n}\n\nfunction gridItem(x, y, w, h) {\n  if (x == null) {\n    x = 0;\n  }\n  if (y == null) {\n    y = 0;\n  }\n  this.draw = function () {\n    ctx.drawImage(img, x, y, w, h);\n  };\n}\n\nfunction Photo() {\n  const seed = Math.random() * 2.5 + 1;\n  const w = imgInfo.width / seed;\n  const h = imgInfo.height / seed;\n  let x = window.innerWidth * Math.random();\n  const finalX = x;\n  let y = window.innerHeight * Math.random();\n  const finalY = y;\n  const r = Math.random() * (180 - -180) + -180;\n\n  let forceX = 0;\n  let forceY = 0;\n\n  const TO_RADIANS = Math.PI / 180;\n\n  this.update = function () {\n    const x0 = x;\n    const y0 = y;\n    const x1 = mouse.x;\n    const y1 = mouse.y;\n\n    const dx = x1 - x0;\n    const dy = y1 - y0;\n\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    const powerX = x0 - ((dx / distance) * magnet) / distance;\n    const powerY = y0 - ((dy / distance) * magnet) / distance;\n\n    forceX = (forceX + (finalX - x0) / 2) / 2.1;\n    forceY = (forceY + (finalY - y0) / 2) / 2.2;\n\n    x = powerX + forceX;\n    y = powerY + forceY;\n  };\n  this.draw = () =>\n    rotateAndPaintImage(ctx, img, r * TO_RADIANS, x, y, w / 2, h / 2, w, h);\n}\n\nfunction rotateAndPaintImage(\n  context,\n  image,\n  angle,\n  positionX,\n  positionY,\n  axisX,\n  axisY,\n  widthX,\n  widthY\n) {\n  context.translate(positionX, positionY);\n  context.rotate(angle);\n  context.drawImage(image, -axisX, -axisY, widthX, widthY);\n  context.rotate(-angle);\n  return context.translate(-positionX, -positionY);\n}\n\nfunction render() {\n  let x = 0;\n  let y = 0;\n  ctx.clearRect(0, 0, width, height);\n  while (y < grids.length) {\n    grids[y].draw();\n    y++;\n  }\n  while (x < imgs.length) {\n    imgs[x].update();\n    imgs[x].draw();\n    x++;\n  }\n\n  return requestAnimationFrame(render);\n}\n\nfunction __range__(left, right, inclusive) {\n  let range = [];\n  let ascending = left < right;\n  let end = !inclusive ? right : ascending ? right + 1 : right - 1;\n  for (let i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n    range.push(i);\n  }\n  return range;\n}\n"]}