{"mappings":"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","sources":["js/modules/background-animation.js","node_modules/@parcel/runtime-js/lib/runtime-8cb8400762e1bc28.js"],"sourcesContent":["import imgSrc from '../../img/canvas-bg.webp';\n\nconst canvas = document.getElementById('canvas');\nconst ctx = canvas.getContext('2d');\nlet width = (canvas.width = window.innerWidth);\nlet height = (canvas.height = window.innerHeight * 0.55);\nconst img = new Image();\nconst imgInfo = {};\nconst imgs = [];\nconst grids = [];\nconst magnet = 2050;\nconst mouse = {\n  x: 1,\n  y: 0,\n};\n\nexport function init() {\n  addListeners();\n\n  img.onload = function (e) {\n    // Check for firefox.\n    imgInfo.width = e.path ? e.path[0].width : e.target.width;\n    imgInfo.height = e.path ? e.path[0].height : e.target.height;\n\n    const numberToShow =\n      Math.ceil(window.innerWidth / imgInfo.width) *\n      Math.ceil(window.innerHeight / imgInfo.height);\n\n    createGrid();\n    if (window.matchMedia('(min-width: 500px)').matches) {\n      populateCanvas(numberToShow * 15);\n    }\n\n    // Image is ready and we're ready to go\n    canvas.classList.add('ready');\n    render();\n  };\n\n  return (img.src = imgSrc);\n}\n\nfunction addListeners() {\n  window.addEventListener('resize', resizeCanvas);\n  window.addEventListener('mousemove', updateMouse);\n}\n\nfunction updateMouse(e) {\n  mouse.x = e.clientX;\n  mouse.y = e.clientY;\n}\n\nfunction resizeCanvas() {\n  width = canvas.width = window.innerWidth;\n  height = canvas.height = window.innerHeight;\n}\n\n// Magic\nfunction populateCanvas(nb) {\n  let i = 0;\n  return (() => {\n    const result = [];\n    while (i <= nb) {\n      const p = new Photo();\n      imgs.push(p);\n      result.push(i++);\n    }\n    return result;\n  })();\n}\n\nfunction createGrid() {\n  const imgScale = 0.4;\n  const grid = {\n    row: Math.ceil(window.innerWidth / (imgInfo.width * imgScale)),\n    cols: Math.ceil(window.innerHeight / (imgInfo.height * imgScale)),\n    rowWidth: imgInfo.width * imgScale,\n    colHeight: imgInfo.height * imgScale,\n  };\n\n  for (\n    let r = 0, end = grid.row, asc = 0 <= end;\n    asc ? r < end : r > end;\n    asc ? r++ : r--\n  ) {\n    const x = r * grid.rowWidth;\n    for (\n      let c = 0, end1 = grid.cols, asc1 = 0 <= end1;\n      asc1 ? c < end1 : c > end1;\n      asc1 ? c++ : c--\n    ) {\n      const y = c * grid.colHeight;\n\n      const item = new gridItem(x, y, grid.rowWidth, grid.colHeight);\n      grids.push(item);\n    }\n  }\n\n  return __range__(0, grids.length, false).map((i) => grids[i].draw());\n}\n\nfunction gridItem(x, y, w, h) {\n  if (x == null) {\n    x = 0;\n  }\n  if (y == null) {\n    y = 0;\n  }\n  this.draw = function () {\n    ctx.drawImage(img, x, y, w, h);\n  };\n}\n\nfunction Photo() {\n  const seed = Math.random() * 2.5 + 1;\n  const w = imgInfo.width / seed;\n  const h = imgInfo.height / seed;\n  let x = window.innerWidth * Math.random();\n  const finalX = x;\n  let y = window.innerHeight * Math.random();\n  const finalY = y;\n  const r = Math.random() * (180 - -180) + -180;\n\n  let forceX = 0;\n  let forceY = 0;\n\n  const TO_RADIANS = Math.PI / 180;\n\n  this.update = function () {\n    const x0 = x;\n    const y0 = y;\n    const x1 = mouse.x;\n    const y1 = mouse.y;\n\n    const dx = x1 - x0;\n    const dy = y1 - y0;\n\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    const powerX = x0 - ((dx / distance) * magnet) / distance;\n    const powerY = y0 - ((dy / distance) * magnet) / distance;\n\n    forceX = (forceX + (finalX - x0) / 2) / 2.1;\n    forceY = (forceY + (finalY - y0) / 2) / 2.2;\n\n    x = powerX + forceX;\n    y = powerY + forceY;\n  };\n  this.draw = () =>\n    rotateAndPaintImage(ctx, img, r * TO_RADIANS, x, y, w / 2, h / 2, w, h);\n}\n\nfunction rotateAndPaintImage(\n  context,\n  image,\n  angle,\n  positionX,\n  positionY,\n  axisX,\n  axisY,\n  widthX,\n  widthY\n) {\n  context.translate(positionX, positionY);\n  context.rotate(angle);\n  context.drawImage(image, -axisX, -axisY, widthX, widthY);\n  context.rotate(-angle);\n  return context.translate(-positionX, -positionY);\n}\n\nfunction render() {\n  let x = 0;\n  let y = 0;\n  ctx.clearRect(0, 0, width, height);\n  while (y < grids.length) {\n    grids[y].draw();\n    y++;\n  }\n  while (x < imgs.length) {\n    imgs[x].update();\n    imgs[x].draw();\n    x++;\n  }\n\n  return requestAnimationFrame(render);\n}\n\nfunction __range__(left, right, inclusive) {\n  let range = [];\n  let ascending = left < right;\n  let end = !inclusive ? right : ascending ? right + 1 : right - 1;\n  for (let i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n    range.push(i);\n  }\n  return range;\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7dKDz\")).toString();"],"names":["$0cb5b27bc6a3ab49$var$canvas","document","getElementById","$0cb5b27bc6a3ab49$var$ctx","getContext","$0cb5b27bc6a3ab49$var$width","width","window","innerWidth","$0cb5b27bc6a3ab49$var$height","height","innerHeight","$0cb5b27bc6a3ab49$var$img","Image","$0cb5b27bc6a3ab49$var$imgInfo","$0cb5b27bc6a3ab49$var$imgs","$0cb5b27bc6a3ab49$var$grids","$0cb5b27bc6a3ab49$var$mouse","x","y","$0cb5b27bc6a3ab49$export$2cd8252107eb640b","addEventListener","$0cb5b27bc6a3ab49$var$resizeCanvas","$0cb5b27bc6a3ab49$var$updateMouse","onload","e","path","target","numberToShow","Math","ceil","imgScale","grid","row","cols","rowWidth","colHeight","r","end","asc","c","end1","asc1","item","$0cb5b27bc6a3ab49$var$gridItem","push","left","right","inclusive","range","ascending","i","$0cb5b27bc6a3ab49$var$__range__","length","map","draw","$0cb5b27bc6a3ab49$var$createGrid","matchMedia","matches","nb","result","p","$0cb5b27bc6a3ab49$var$Photo","$0cb5b27bc6a3ab49$var$populateCanvas","classList","add","$0cb5b27bc6a3ab49$var$render","src","$parcel$interopDefault","$j0KCY","clientX","clientY","w","h","this","drawImage","seed","random","finalX","finalY","forceX","forceY","TO_RADIANS","PI","update","x0","y0","dx","dy","distance","sqrt","$0cb5b27bc6a3ab49$var$rotateAndPaintImage","image","angle","positionX","positionY","axisX","axisY","widthX","widthY","context","translate","rotate","clearRect","requestAnimationFrame","module","exports","URL","parcelRequire","resolve","import","meta","url","toString"],"version":3,"file":"background-animation.9da393a6.js.map"}